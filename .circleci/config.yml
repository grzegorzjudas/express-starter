version: 2
jobs:
    Build App:
        docker:
            - image: circleci/node:10.16.0
        working_directory: ~/repo
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    - v1-dependencies-
            - run:
                name: Install dependencies
                command: npm install
            - save_cache:
                paths:
                    - node_modules
                key: v1-dependencies-{{ checksum "package.json" }}
            - run:
                name: Build
                command: NODE_ENV=production npm run build
            - run:
                name: Package
                command: npm run package
            - persist_to_workspace:
                root: .
                paths:
                    - Dockerfile
                    - package.json
                    - package-lock.json
                    - artifact.tar.gz
    Build Docker:
        docker:
            - image: docker:18.09.6
        working_directory: ~/repo
        steps:
            - attach_workspace:
                at: .
            - setup_remote_docker
            - restore_cache:
                keys:
                    - v1-docker-{{ .Branch }}
                paths:
                    - /caches/app.tar
            - run:
                name: Load docker image layer cache
                command: set +o pipefail && docker load -i /caches/app.tar | true
            - run:
                name: Build docker image
                command: docker image build --tag app --cache-from=/cache/app.tar .
            - run:
                name: Save docker image layer cache
                command: mkdir -p /caches && docker save -o /caches/app.tar grzegorzjudas/express-starter:latest
            - save_cache:
                key: v1-docker-{{ .Branch }}-{{ epoch }}
                paths:
                    - /caches/app.tar
            - deploy:
                name: Push docker image
                command: |
                    apk add --no-cache py2-pip
                    pip install awscli
                    login=$(aws ecr get-login --no-include-email)
                    ${login}
                    docker tag app ${ECR_ENDPOINT}/grzegorzjudas/express-starter:latest
                    docker push "${ECR_ENDPOINT}/grzegorzjudas/express-starter:latest"
workflows:
    version: 2
    default:
        jobs:
            - Build App
            - Build Docker:
                requires:
                    - Build App
